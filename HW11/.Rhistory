sample(5,10)
sample(10,5)
sample(k,round(k/2,0)
)
k = 10
sample(k,round(k/2,0))
k = 8
sample(k,round(k/2,0))
k = 8
sample(k,round(k/2,0))
k = 8
sample(k,round(k/2,0))
setwd("C:/Users/v-anleon/Desktop/Tartu_University/DataMining2014/git/DataMining2014/HW11")
virus = read.table("email_network.txt", header = FALSE)
virus_graph = graph.data.frame(virus, directed = TRUE)
library(igraph)
virus = read.table("email_network.txt", header = FALSE)
virus_graph = graph.data.frame(virus, directed = TRUE)
ecount(virus_graph)
vcount(virus_graph)
g <- erdos.renyi.game(20, 1/20)
plot(g)
clusters(g, mode = 'strong')
strong = clusters(virus_graph, mode="strong")
membership = strong[[1]]
sizes = strong[[2]]
which.max(sizes)
head(membership)
which(membership==62712)
head(which(membership==50402))
head(V(g))
head(V(virus_graph))
scc = which(membership==50402)
scc
length(scc)
length(scc)/vcount(virus_graph)#fraction
?degree.distribution
indegree = degree(virus_graph, mode = c("in"))
head(indegree)
indegree[,1]
indegree[1]
head(order(indegree))
class(indegree)
names(indegree)
weak = clusters(virus_graph, mode="strong")
mmbr_weak = weak[[1]]
sizes_w = weak[[2]]
which.max(sizes_w)
weak_cc = which(mmbr_weak==50402)
head(weak_cc)
weak = clusters(virus_graph, mode="weak")
mmbr_weak = weak[[1]]
sizes_w = weak[[2]]
which.max(sizes_w)
weak_cc = which(mmbr_weak==2)
head(weak_cc)
head(indegree)
indgr = as.data.frame(indegree)
head(indgr)
indgr$node_id = row.names(indgr)
head(indgr)
head(weak_cc)
weak_indegree = subset(indgr, node_id %in% weak_cc)
head(weak_indegree)
OUT = subset(weak_indegree, indegree==0)
nrow(out)/vcount(virus_graph)
nrow(OUT)/vcount(virus_graph)
head(virus)
head(scc)
names(virus)=c("node_s","node_e")
have_ourdegree = subset(virus, node_s%in%scc)
head(have_ourdegree)
rm(have_ourdegree)
out = subset(virus, node_s%in%scc & !(node_e %in%scc))
nrow(out)/vcount(virus_graph)
point_out = subset(virus, node_s%in%scc)
out = subset(point_out, !(node_e %in%scc))
nrow(out)/vcount(virus_graph)
point_out = subset(virus, node_s%in%scc & !(node_e %in%scc))
head(point_out)
point_out = virus$node_e[virus$node_s%in%scc]
head(point_out)
out = !(point_out%in%scc)
head(out)
out = point_out[!(point_out%in%scc)]
head(out)
head(indgr)
out_dt = subset(indgr, node_id%in%out)
out_dt = subset(indgr, node_id%in%out & indegree==0)
out_dt = subset(indgr, node_id%in%out)
head(out_dt)
outdegree = degree(virus_graph, mode = c("out"))
head(outdegree)
dgr = as.data.frame(indegree, outdegree)
indegree = degree(virus_graph, mode = c("in"))
outdegree = degree(virus_graph, mode = c("out"))
dgr = cbind.data.frame(indegree, outdegree)
head(dgr)
dgr$node_id = row.names(dgr)
head(dgr)
out_dt = subset(dgr, node_id%in%out)
head(out_dt)
subset(out_dt, indegree==0)
subset(out_dt, outdegree==0)
point_out = virus$node_e[virus$node_s%in%scc]
out = point_out[!(point_out%in%scc)]
out_dt = subset(dgr, node_id%in%out & outdegree==0)
nrow(out_dt)/vcount(virus_graph)
dsc = subset(virus, !(node_id%in%scc |node_id%in%scc))
dsc = subset(virus, !(node_e%in%scc |node_s%in%scc))
head(dsc)
head(scc)
nrow(dsc)/vcount(virus_graph)
head(scc)
head(sizes)
weak = clusters(virus_graph, mode="weak")
membership_weak = weak[[1]]
sizes_w = weak[[2]]
which.max(sizes_w)
wcc = which(membership==2)
length(wcc)#22868
wcc
head9scc
head(scc)
weak = clusters(virus_graph, mode="weak")
membership_weak = weak[[1]]
head(membership_weak)
sizes_w = weak[[2]]
which.max(sizes_w)
wcc = which(membership_weak==2)
length(wcc)#22868
length(wcc)/vcount(virus_graph)
head(wcc)
?setdiff
in_out = setdiff(wcc,scc)
head(in_out)
length(in_out)/vcount(virus_graph)
head(dgr)
expl = subset(dgr, node_id%in%in_out)
head(expl)
nrow(subset(expl, indegree==0))
nrow(subset(expl, indegree==0))/vcount(virus_graph)
nrow(subset(expl, outdegree==0))/vcount(virus_graph)
head(scc)
sample(length(scc),1)
scc==14702
which(scc==14702)
sample(length(scc),1)
random_node = sample(length(scc),1)
bfsOutTree = graph.bfs(virus_graph, random_node, neimode='out')
head(bfsOutTree)
?graph.bfs
head(bfsOutTree$order)
visited_nodes = bfsOutTree$order
out_component_size = length(visited_nodes) - length(scc)
length(visited_nodes)
length(visited_nodes)-length(scc)
out_component_size = (length(visited_nodes) - length(scc))/vcount(virus_graph)
out_component_size
bfsOutTree = graph.bfs(virus_graph, random_node, neimode='out')
random_node
bfsOutTree = graph.bfs(virus_graph, random_node, neimode='out')
visited_nodes = bfsOutTree$order
out_component_size = (length(visited_nodes) - length(scc))/vcount(virus_graph)
out_component_size
?sample
head(scc)
bfsOutTree = graph.bfs(virus_graph, 2, neimode='out')
visited_nodes = bfsOutTree$order
length(visited_nodes)
vcount(virus_graph)
head(scc)
bfsOutTree = graph.bfs(virus_graph, 4, neimode='out')
visited_nodes = bfsOutTree$order
length(visited_nodes)
?graph.bfs
bfsOutTree = graph.bfs(virus_graph, root=4, neimode='out')
visited_nodes = bfsOutTree$order
length(visited_nodes)
length(scc)
bfs_out_tree = graph.bfs(virus_graph, root=4, "out")
visited_nodes = bfs_out_tree$order
length(visited_nodes)
head(visited_nodes)
weak = clusters(virus_graph, mode="weak")
membership_weak = weak[[1]]
sizes_w = weak[[2]]
which.max(sizes_w)
wcc = which(membership_weak==2)
length(wcc)#51608
disconnected = (vcount(virus_graph)-length(wcc))/vcount(virus_graph)
disconnected
scc[45]
head(virus_graph)
bfs_out_tree = graph.bfs(virus_graph, root=66, "out")
rm(bfsOutTree)
bfs_out_tree = graph.bfs(virus_graph, root=66, "in")
visited_nodes = bfs_out_tree$order
length(visited_nodes)
head(bfs_out_tree$order)
subset(virus_graph, node_s==66 & node_e==2)
subset(virus, node_s==66 & node_e==2)
